---
- name: Install Traefik
  hosts: traefik
  vars:
    traefik_version: v3.1.6

  tasks:
    - name: Include variables
      ansible.builtin.include_vars:
        dir: "{{ root_playbook_dir }}/vars"

    - name: Ensure traefik data directory exists with correct permissions
      become: true
      ansible.builtin.file:
        path: /home/{{ ansible_user }}/traefik/data
        state: directory
        owner: "{{ ansible_user }}"
        group: "docker"
        mode: "0775"
    
    - name: Ensure traefik config-files directory exists with correct permissions
      become: true
      ansible.builtin.file:
        path: /home/{{ ansible_user }}/traefik/config-files
        state: directory
        owner: "{{ ansible_user }}"
        group: "docker"
        mode: "0775"

    - name: Template traefik.yml to server
      become: true
      ansible.builtin.template:
        src: traefik.j2
        dest: /home/{{ ansible_user }}/traefik/data/traefik.yml
        owner: "{{ ansible_user }}"
        group: "docker"
        mode: "0775"

    - name: Create empty acme.json file
      become: true
      ansible.builtin.file:
        path: /home/{{ ansible_user }}/traefik/data/acme.json
        state: file
        owner: "{{ ansible_user }}"
        group: "docker"
        mode: "0600"

    - name: Template authentik-forward-auth.yml to server
      become: true
      ansible.builtin.template:
        src: authentik-forward-auth.j2
        dest: /home/{{ ansible_user }}/traefik/config-files/authentik-forward-auth.yml
        owner: "{{ ansible_user }}"
        group: "docker"
        mode: "0775"

    - name: Allow memory overcommit for Redis
      become: true
      ansible.posix.sysctl:
        name: vm.overcommit_memory
        value: "1"
        state: present
        reload: true

    - name: Install Redis for traefik-kop
      ansible.builtin.include_role:
        name: joshrnoll.homelab.tailscale_container
      vars:
        tailscale_container_tailnet_name: "{{ tailnet_name }}"
        tailscale_container_oauth_client_secret: "{{ tailscale_containers_oauth_client['secret'] }}"
        tailscale_container_service_name: redis-traefik
        tailscale_container_image: redis
        tailscale_container_tag: 7.4.1
        tailscale_container_no_serve: true
        tailscale_container_userspace_networking: "false"
        tailscale_container_volumes:
          - /home/{{ ansible_user }}/traefik-redis/data:/data
        tailscale_container_commands: --save 60 1 --loglevel warning
        tailscale_container_labels:
          nautical-backup.enable: "true"
    
    - name: Install Traefik
      ansible.builtin.include_role:
        name: joshrnoll.homelab.tailscale_container
      vars:
        tailscale_container_tailnet_name: "{{ tailnet_name }}"
        tailscale_container_oauth_client_secret: "{{ tailscale_containers_oauth_client['secret'] }}"
        tailscale_container_service_name: traefik
        tailscale_container_image: traefik
        tailscale_container_tag: "{{ traefik_version }}"
        tailscale_container_no_serve: true
        tailscale_container_userspace_networking: "false"
        tailscale_container_volumes:
          - /etc/localtime:/etc/localtime:ro
          - /var/run/docker.sock:/var/run/docker.sock:ro
          - /home/{{ ansible_user }}/traefik/data/traefik.yml:/traefik.yml:ro
          - /home/{{ ansible_user }}/traefik/data/acme.json:/acme.json
          - /home/{{ ansible_user }}/traefik/config-files:/config-files:ro

        tailscale_container_env_vars:
          CF_DNS_API_TOKEN: "{{ cloudflare_api_token }}"
        tailscale_container_labels:
          nautical-backup.enable: "true"
          traefik.enable: "true"
          traefik.http.routers.traefik.entrypoints: "http"
          traefik.http.routers.traefik.rule: "Host(`traefik.{{ domain_name }}`)"
          traefik.http.middlewares.traefik-https-redirect.redirectscheme.scheme: "https"
          traefik.http.middlewares.sslheader.headers.customrequestheaders.X-Forwarded-Proto: "https"
          traefik.http.routers.traefik.middlewares: "traefik-https-redirect"
          traefik.http.routers.traefik-secure.entrypoints: "https"
          traefik.http.routers.traefik-secure.rule: "Host(`traefik.{{ domain_name }}`)"
          traefik.http.routers.traefik-secure.tls: "true"
          traefik.http.routers.traefik-secure.tls.certresolver: "cloudflare"
          traefik.http.routers.traefik-secure.tls.domains[0].main: "{{ domain_name }}"
          traefik.http.routers.traefik-secure.tls.domains[0].sans: "*.{{ domain_name }}"
          traefik.http.routers.traefik-secure.service: "api@internal"
          traefik.http.services.traefik-secure.loadbalancer.server.port: "443"

    - name: Create/update Cloudflare DNS record
      community.general.cloudflare_dns:
        zone: "{{ domain_name }}"
        record: traefik
        type: A
        value: "{{ tailscale_container_ip_address }}"
        solo: true
        proxied: false
        account_email: "{{ cloudflare_email }}"
        api_token: "{{ cloudflare_api_token }}"
        state: present
...
